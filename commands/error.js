module.exports = {
    name: "error",
    execute(message) {
        var list = ["Error: Permission denied to access property \"x\"","InternalError: too much recursion","RangeError: argument is not a valid code point","RangeError: invalid array length","RangeError: invalid date","RangeError: precision is out of range","RangeError: radix must be an integer","RangeError: repeat count must be less than infinity","RangeError: repeat count must be non-negative","ReferenceError: \"x\" is not defined","ReferenceError: assignment to undeclared variable \"x\"","ReferenceError: can't access lexical declaration`X' before initialization","ReferenceError: deprecated caller or arguments usage","ReferenceError: invalid assignment left-hand side","ReferenceError: reference to undefined property \"x\"","SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated","SyntaxError: \"use strict\" not allowed in function with non-simple parameters","SyntaxError: \"x\" is a reserved identifier","SyntaxError: JSON.parse: bad parsing","SyntaxError: Malformed formal parameter","SyntaxError: Unexpected '#' used outside of class body","SyntaxError: Unexpected token","SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead","SyntaxError: a declaration in the head of a for-of loop can't have an initializer","SyntaxError: applying the 'delete' operator to an unqualified name is deprecated","SyntaxError: for-in loop head declarations may not have initializers","SyntaxError: function statement requires a name","SyntaxError: identifier starts immediately after numeric literal","SyntaxError: illegal character","SyntaxError: invalid regular expression flag \"x\"","SyntaxError: missing ) after argument list","SyntaxError: missing ) after condition","SyntaxError: missing : after property id","SyntaxError: missing ; before statement","SyntaxError: missing = in const declaration","SyntaxError: missing ] after element list","SyntaxError: missing formal parameter","SyntaxError: missing name after . operator","SyntaxError: missing variable name","SyntaxError: missing } after function body","SyntaxError: missing } after property list","SyntaxError: redeclaration of formal parameter \"x\"","SyntaxError: return not in function","SyntaxError: test for equality (==) mistyped as assignment (=)?","SyntaxError: unterminated string literal","TypeError: \"x\" has no properties","TypeError: \"x\" is (not) \"y\"","TypeError: \"x\" is not a constructor","TypeError: \"x\" is not a function","TypeError: \"x\" is not a non-null object","TypeError: \"x\" is read-only","TypeError: 'x' is not iterable","TypeError: More arguments needed","TypeError: Reduce of empty array with no initial value","TypeError: X.prototype.y called on incompatible type","TypeError: can't access dead object","TypeError: can't access property \"x\" of \"y\"","TypeError: can't assign to property \"x\" on \"y\": not an object","TypeError: can't define property \"x\": \"obj\" is not extensible","TypeError: can't delete non-configurable array element","TypeError: can't redefine non-configurable property \"x\"","TypeError: cannot use 'in' operator to search for 'x' in 'y'","TypeError: cyclic object value","TypeError: invalid 'instanceof' operand 'x'","TypeError: invalid Array.prototype.sort argument","TypeError: invalid arguments","TypeError: invalid assignment to const \"x\"","TypeError: property \"x\" is non-configurable and can't be deleted","TypeError: setting getter-only property \"x\"","TypeError: variable \"x\" redeclares argument","URIError: malformed URI sequence","Warning: 08/09 is not a legal ECMA-262 octal constant","Warning: -file- is being assigned a //# sourceMappingURL, but already has one","Warning: Date.prototype.toLocaleFormat is deprecated","Warning: JavaScript 1.6's for-each-in loops are deprecated","Warning: String.x is deprecated; use String.prototype.x instead","Warning: expression closures are deprecated","Warning: unreachable code after return statement"]
        var e = list[Math.floor(Math.random() * list.length)]
        var name = e.split(":")[0]
        var m = e.split(":")[1]
        throw { name: name, message: m }
    }
}